version: 2.1
jobs:
  lint:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - lint-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - lint-

      - run:
          name: install dependencies
          command: |
            make setup
            make activate
            make install
            
      - save_cache:
          paths:
            - ./capstone
          key: lint-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            make activate
            make lint

  buildDockerImage:
    docker:
      - image: circleci/golang:1.15
        auth:
          username: $DCKUSER
          password: $DCKPWD
          
    working_directory: ~/repo
    
    steps:
      - checkout
  
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
 
      # build and push Docker image
      - run: |
          TAG=capstone
          docker build --tag=$TAG .
          echo $DCKPWD | docker login -u $DCKUSER --password-stdin
          docker run -d -p 8001:8000 $TAG
          sleep 10
          echo "Running check after docker run"
          check=`curl -s localhost:8000 | grep -c "^Simple Flask"`
          if [ 1 -eq $check ]
          then 
            echo "Check passed pushing image to dockerhub"
            docker push zoidzter/capstone
          else
            exit 1
          fi

workflows:
  default:
    jobs:
      - lint
      - buildDockerImage:
          requires: [lint]
      #- sendImageToECR
      #    requires: buildDockerImage
      #- startInfra
      #- 
      #    requires: [build-frontend]